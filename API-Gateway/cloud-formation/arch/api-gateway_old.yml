---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'API Gateway by Wolfgang Unger'

Resources:
  API: 
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: 'API-from CF 2'
      Description: 'API from Cloud Formation'
      #ApiKeySourceType: String
      #BinaryMediaTypes:
       # - String
      #Body: JSON object
      #BodyS3Location:
       # S3Location
      #CloneFrom: String
      EndpointConfiguration:
       Types:
        - REGIONAL
      FailOnWarnings: true
      #MinimumCompressionSize: Integer
      #Parameters:
      #  String: String
      #Policy: JSON object
      
        
  ResourceRoot:
    Type: "AWS::ApiGateway::Resource"
    Properties:
        ParentId: 
          Fn::GetAtt: 
            - "API"
            - "RootResourceId"
        PathPart: 'cognito-api'
        RestApiId: !Ref API
        
  ResourcePreSignin:
    Type: "AWS::ApiGateway::Resource"
    Properties:
        ParentId: 
          Fn::GetAtt: 
            - "API"
            - "RootResourceId"
        PathPart: 'hello'
        RestApiId: !Ref API
        
  Method1:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: GET
      ResourceId: !Ref ResourceRoot
      RestApiId: !Ref API
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        ContentHandling: CONVERT_TO_TEXT
        IntegrationResponses:
          - ContentHandling:  CONVERT_TO_TEXT
            StatusCode: 400
      #RequestValidatorId: !Ref RequestValidator
      OperationName: Get

  Method2:
    Type: 'AWS::ApiGateway::Method'
    DependsOn: LambdaPermission
    Properties:
      HttpMethod: GET
      ResourceId: !Ref ResourcePreSignin
      RestApiId: !Ref API
      AuthorizationType: NONE
      Integration:
        Type: AWS
        Uri: arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:016973021151:function:HelloWorld/invocations
           #'Fn::Join':
           # - ''
           # - - 'arn:aws:apigateway:'
           #   - Ref: 'AWS::Region'
           #   - ':lambda:path/2015-03-31/functions/'
           #   - 'Fn::GetAtt':
           #       - Lambda1
           #       - Arn
           #   - /invocations
        IntegrationHttpMethod: GET
        ContentHandling: CONVERT_TO_TEXT
        IntegrationResponses:
          - ContentHandling:  CONVERT_TO_TEXT
            StatusCode: 400
      #RequestValidatorId: !Ref RequestValidator
      OperationName: Get
      
  Lambda1:
    Type: "AWS::Lambda::Function"
    Properties: 
        Code:
            ZipFile: >
                def lambda_handler(event, context):
                return 'Hello from Lambda'
        Description: Test with Cloud Formation
        FunctionName: HelloWorldPyByCF
        Handler: index.lambda_handler
        #Role: arn:aws:iam::016973021151:role/service-role/LambdaRole
        Role:
          'Fn::GetAtt':
            - LambdaExecutionRole
            - Arn
        Runtime: python2.7      

            
  Deployment:           
    Type: "AWS::ApiGateway::Deployment"
    DependsOn: Method1
    Properties:
        Description: Dev
        RestApiId: !Ref API
        #StageDescription: Dev
        StageName: Dev
        
    
  CustomDomain:    
    Type: "AWS::ApiGateway::DomainName"
    Properties: 
        #CertificateArn: String
        DomainName: cf.api.aws.de.altemista.cloud
        EndpointConfiguration: 
              Types:
                - REGIONAL
        RegionalCertificateArn: arn:aws:acm:eu-central-1:016973021151:certificate/deccf42c-6d4a-415f-836e-f2817961d5a9
        
  CustomDomainMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    DependsOn: Deployment
    Properties:
      BasePath: ''
      DomainName: !Ref CustomDomain
      RestApiId: !Ref API
      Stage: Dev
      
  CustomDomainMappingRecordSet:    
      Type: "AWS::Route53::RecordSet"
      Properties: 
        #HostedZoneId: Z2Y4F16KYSZ3ER
        HostedZoneName: aws.de.altemista.cloud.
        Name: cf.api.aws.de.altemista.cloud.
        Type: CNAME
        ResourceRecords:
            - d-sjv2wuc662.execute-api.eu-central-1.amazonaws.com
        #SetIdentifier: String
        TTL: 300

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        
  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      FunctionName: HelloWorld
        'Fn::GetAtt':
          - Method2
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        'Fn::Join':
          - ''
          - - 'arn:aws:execute-api:'
            - Ref: 'AWS::Region'
            - ':'
            - Ref: 'AWS::AccountId'
            - ':'
            - Ref: API 
            - /*
            
  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn:
        'Fn::GetAtt':
          - LambdaExecutionRole
          - Arn