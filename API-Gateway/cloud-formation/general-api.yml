---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'API with CloudFormation by Wolfgang Unger'

####################
Parameters:
#######cannot be created in this stack, needs be be created in advanced, since the confirmation needs about 1 day
   CertificateArn:
      Description: The ARN of the regional certification  
      Type: String
      Default:    arn:aws:acm:eu-central-1:039735417706:certificate/6e688811-3ec4-4e55-8669-e50be1e9a865

   APIName:
      Description: The name of the API 
      Type: String
      Default: MyAPI
      
   
   CustomDomainName:
      Description: The name of the custom domain for the API 
      Type: String
      Default: api.sccbrasil.com      
     
Resources:
  ############## API ##########
  MyApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Ref APIName
      Description: API created by CloudFormation
      FailOnWarnings: true
      
#############            
  ApiGatewayCloudWatchLogsRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiGatewayLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:DescribeLogGroups'
                  - 'logs:DescribeLogStreams'
                  - 'logs:PutLogEvents'
                  - 'logs:GetLogEvents'
                  - 'logs:FilterLogEvents'
                Resource: '*'
  
  ApiGatewayAccount:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn:
        'Fn::GetAtt':
          - ApiGatewayCloudWatchLogsRole
          - Arn
  

  ############# rest resources #############
  Level0Resource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: MyApi
      ParentId:
        'Fn::GetAtt':
          - MyApi
          - RootResourceId
      PathPart: apidomain
      
  Level1Resource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: MyApi
      ParentId: !Ref Level0Resource
      PathPart: v1  
      
  HealthResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: MyApi
      ParentId: !Ref Level1Resource
      PathPart: health

  PetsResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: MyApi
      ParentId: !Ref Level1Resource
      PathPart: pets      
      
 ############## methods ##############     
  HealthRequestGET:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: HTTP
        IntegrationHttpMethod: GET
        Uri: 'http://www.google.de'

        IntegrationResponses:
          - StatusCode: 200
      ResourceId:
        Ref: HealthResource
      RestApiId:
        Ref: MyApi
      MethodResponses:
        - StatusCode: 200
        
  PetsRequestGET:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      RequestParameters:
        #method.request.header.Authorization: true
        method.request.querystring.type: true
        method.request.querystring.page : true      
      Integration:
        Type: HTTP
        IntegrationHttpMethod: GET
        Uri: 'http://petstore-demo-endpoint.execute-api.com/petstore/pets'
        ## you can use stage variables like this:
        #Uri: 'http://${stageVariables.Domain}/petstore/pets'
        IntegrationResponses:
          - StatusCode: 200
        RequestParameters:
           #integration.request.header.Authorization: method.request.header.Authorization  
           integration.request.querystring.type: method.request.querystring.type               
           integration.request.querystring.page: method.request.querystring.page   
      ResourceId:
        Ref: PetsResource
      RestApiId:
        Ref: MyApi
      MethodResponses:
        - StatusCode: 200  
          ResponseModels: { "application/json" : Pet }

  PetsRequestPOST:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      #RequestParameters:
        #method.request.header.Authorization: true   
      RequestModels: { "application/json" :  NewPet }  
                 
      Integration:
        Type: HTTP
        IntegrationHttpMethod: POST
        Uri: 'http://petstore-demo-endpoint.execute-api.com/petstore/pets'
        IntegrationResponses:
          - StatusCode: 200
        #RequestParameters:
           #integration.request.header.Authorization: method.request.header.Authorization    
      ResourceId:
        Ref: PetsResource
      RestApiId:
        Ref: MyApi
      MethodResponses:
        - StatusCode: 200  
          ResponseModels: { "application/json" : NewPet }            

            ############## models ############
  NewPet: 
    Type: AWS::ApiGateway::Model
    DependsOn: PetType
    Properties: 
      RestApiId: 
        Ref: MyApi
      ContentType: "application/json"
      Description: NewPet Model 
      Name: NewPet
      Schema: 
        "$schema": "http://json-schema.org/draft-04/schema#" 
        title: NewPet
        type: array
        items:   
            type: object
            properties:
                type:
                   # $ref: '#/definitions/PetType'
                   $ref: !Join  
                        - ''
                        - - 'https://apigateway.amazonaws.com/restapis/'
                          - !Ref MyApi
                          - /models/
                          - !Ref PetType
                price:
                    type: number

  Pet: 
    Type: AWS::ApiGateway::Model
    Properties: 
      RestApiId: 
        Ref: MyApi
      ContentType: "application/json"
      Description: Pet Model 
      Name: Pet
      Schema: 
        "$schema": "http://json-schema.org/draft-04/schema#" 
        title: Pet
        type: array
        items:   
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                price:
                    type: number
                    
                    
  PetType: 
    Type: AWS::ApiGateway::Model
    Properties: 
      RestApiId: 
        Ref: MyApi
      ContentType: "application/json"
      Description: PetType Model 
      Name: PetType
      Schema: 
        "$schema": "http://json-schema.org/draft-04/schema#" 
        title: PetType
        type: array
        items:                       
            type: string
            enum:
                - dog
                - cat
                - fish
                - bird
                - gecko
        
#### stage & deployment
    #### stage & deployment ###############
  MyApiStageINT:
    DependsOn:
      - ApiGatewayAccount
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId:
        Ref: ApiDeploymentINT
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId:
        Ref: MyApi
      StageName: INT
      Variables:
        Domain: 'my.int.domain'

  MyApiStageDEV:
    DependsOn:
      - ApiGatewayAccount
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId:
        Ref: ApiDeploymentDEV
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: '*'
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId:
        Ref: MyApi
      StageName: DEV
      Variables:
        Domain: 'my.dev.domain'      
  
  ApiDeploymentDEV:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - HealthRequestGET
    Properties:
      RestApiId:
        Ref: MyApi
      
  ApiDeploymentINT:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - HealthRequestGET
    Properties:
      RestApiId:
        Ref: MyApi
##########custom domains #####
  CustomDomain:    
    Type: "AWS::ApiGateway::DomainName"
    Properties: 
        DomainName: !Ref CustomDomainName
        EndpointConfiguration: 
              Types:
                - REGIONAL
        RegionalCertificateArn: !Ref CertificateArn
  
  CustomDomainMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    DependsOn: ApiDeploymentINT
    Properties:
      BasePath: ''
      DomainName: !Ref CustomDomain
      RestApiId: !Ref MyApi
      Stage: !Ref MyApiStageINT
     

############################################        
Outputs:
    
  API:
    Description: The created ApiDeployment
    Value: !Ref MyApi
    
  RootUrl:
    Description: Root URL of the API gateway
    Value:
      'Fn::Join':
        - ''
        - - 'https://'
          - Ref: MyApi
          - .execute-api.
          - Ref: 'AWS::Region'
          - .amazonaws.com
