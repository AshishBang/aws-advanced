######################################################################################
#  Description
######################################################################################

Description: >
    This is a simple hello world ecs example
#by wolfgang unger 3.2018
######################################################################################
#  Parameters
######################################################################################

Parameters: 

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: ungerwHelloWorld-bridge

    ParentVPCStack:
        Description: Please enter the Parent VPC Stack (do not change)
        Type: String
        Default: UngerwVPC

    ParentECSStack:
        Description: Please enter the Parent ECS Stack (do not change)
        Type: String
        Default: UngerwECS
        
    TaskDefinition:
        Description: Please enter the name of the task definition
        Type: String
        Default: ungerwHelloWorld-td-bridge
        
        
    ServiceRole:
        Description: Please enter the name of the Service Role
        Type: String
        Default: ungerwECSServiceRole

    DesiredCount: 
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 2

    MaxCount:
        Description: Maximum number of instances of this task we can run across our cluster
        Type: Number
        Default: 3

######################################################################################
#  Metadata
######################################################################################
Metadata:
  AWS::CloudFormation::Interface: 
    ParameterGroups:
      - 
        Label: 
          default: "Base Service Configuration"
        Parameters: 
          - EnvironmentName
          - ParentVPCStack
          - ParentECSStack
      - 
        Label: 
          default: "Scaling Configuration"
        Parameters: 
          - DesiredCount
          - MaxCount 

######################################################################################
#  Resources
######################################################################################

Resources:

    ######################################################################################
    #  ECS Service and Task Definition
    ######################################################################################

    Service: 
        Type: AWS::ECS::Service
        DependsOn: LoadBalancerListener
        Properties: 
            Cluster:
                'Fn::ImportValue': !Sub '${ParentECSStack}-Cluster'
            Role:  !Sub '${ServiceRole}'
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Sub '${TaskDefinition}'
            LoadBalancers: 
                - ContainerName: !Sub '${TaskDefinition}'
                  ContainerPort: 80
                  TargetGroupArn: !Ref TargetGroup

    ######################################################################################
    #  Loadbalancing
    ######################################################################################

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: !Sub LB-${AWS::StackName}
            Type: application
            Scheme: internet-facing
            Subnets: !Split
              - ','
              - 'Fn::ImportValue':
                    !Sub '${ParentVPCStack}-PublicSubnets' # <- Change for private or public services
            SecurityGroups: 
                - 'Fn::ImportValue': !Sub '${ParentECSStack}-LoadBalancerSecurityGroup'
            Tags: 
                - Key: Name
                  Value: !Sub LB-${AWS::StackName}

    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP 
            DefaultActions: 
                - Type: forward
                  TargetGroupArn: !Ref TargetGroup

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId:
                'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC'
            Port: 80
            Protocol: HTTP
            Matcher: 
                HttpCode: 200-299
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
            #TargetType: ip
    

    ######################################################################################
    #  Autoscaling
    ######################################################################################
 

#####################################################################################
#  Outputs
######################################################################################

Outputs:

    LoadBalancer:
        Description: A reference to the Application Load Balancer
        Value: !Ref LoadBalancer
        Export:
            Name: !Sub LB-${AWS::StackName}

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName
        Export:
            Name: !Sub LB-URL-${AWS::StackName}

    Listener:
        Description: A reference to a port 80 listener
        Value: !Ref LoadBalancerListener  
        Export:
            Name: !Sub LB-Listener-${AWS::StackName}
    